<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="34ba9f00-ee04-4bf5-9c5a-840a31b48d7a" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/src/Chalange/Client.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/Chalange/IssueRaiser.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/Chalange/ReceiverInterface.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2KDEzqPHq7F00w7Y58cbJF79jN0" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "WebServerToolWindowFactoryState": "false",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)"
  }
}]]></component>
  <component name="RunManager" selected="Application.Chalange.Client">
    <configuration name="Chalange.Client" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="Chalange.Client" />
      <module name="ChainOfResponsabilityExample" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="Chalange.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Client" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="Client" />
      <module name="ChainOfResponsabilityExample" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="Main" />
      <module name="ChainOfResponsabilityExample" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.Chalange.Client" />
        <item itemvalue="Application.Main" />
        <item itemvalue="Application.Client" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="34ba9f00-ee04-4bf5-9c5a-840a31b48d7a" name="Changes" comment="" />
      <created>1673501020905</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1673501020905</updated>
      <workItem from="1673501022635" duration="3402000" />
    </task>
    <task id="LOCAL-00001" summary="I have created an example of chain of responsability , and as a given example I gave an atm, which once you go to withdorw from accound firstly you chech the balance and try to withdraw ( all time in real live will be multiple of 10) so like in real life I have implemented to be only 10 multiple. Get back at the process , you enter the amount what you want to withdraw, In back of atm a request was raised and sent to main atm's computer to colculate bill banctotes... Exactly how chain design works, first of all the computer check if it can give you the bigeast bill, if not go above and change less and less the bill value , till all amount was distributed">
      <created>1673504592717</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1673504592717</updated>
    </task>
    <task id="LOCAL-00002" summary="Message class , which just was created represnt in fact an message ,should be any kind of message(contain a priority and a private String representing the text)">
      <created>1673504914686</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1673504914686</updated>
    </task>
    <option name="localTasksCounter" value="3" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="I have created an example of chain of responsability , and as a given example I gave an atm, which once you go to withdorw from accound firstly you chech the balance and try to withdraw ( all time in real live will be multiple of 10) so like in real life I have implemented to be only 10 multiple. Get back at the process , you enter the amount what you want to withdraw, In back of atm a request was raised and sent to main atm's computer to colculate bill banctotes... Exactly how chain design works, first of all the computer check if it can give you the bigeast bill, if not go above and change less and less the bill value , till all amount was distributed" />
    <MESSAGE value="Message class , which just was created represnt in fact an message ,should be any kind of message(contain a priority and a private String representing the text)" />
    <option name="LAST_COMMIT_MESSAGE" value="Message class , which just was created represnt in fact an message ,should be any kind of message(contain a priority and a private String representing the text)" />
  </component>
</project>